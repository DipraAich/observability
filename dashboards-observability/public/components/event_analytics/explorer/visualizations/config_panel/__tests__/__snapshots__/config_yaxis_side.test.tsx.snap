// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConfigYAxisSide component Renders ConfigYAxisSide with data 1`] = `
<ConfigYAxisSide
  handleConfigChange={
    [MockFunction] {
      "calls": Array [
        Array [
          Array [
            Object {
              "aggregation": "max",
              "className": "color-theme-combo-box-option",
              "ctid": "ct_66861491-61c8-11ed-b89f-53a8c43cc17a",
              "customLabel": "",
              "label": "max(bytes)",
              "name": "bytes",
              "side": "left",
            },
          ],
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  schemas={Array []}
  sectionName="Series position"
  visualizations={
    Object {
      "data": Object {
        "appData": Object {
          "fromApp": false,
        },
        "defaultAxes": Object {
          "xaxis": Array [
            Object {
              "label": "tags",
              "name": "tags",
              "type": "text",
            },
          ],
          "yaxis": Array [
            Object {
              "label": "max(bytes)",
              "name": "max(bytes)",
              "type": "long",
            },
            Object {
              "label": "host",
              "name": "host",
              "type": "text",
            },
          ],
        },
        "indexFields": Object {
          "availableFields": Array [
            Object {
              "name": "agent",
              "type": "string",
            },
            Object {
              "name": "bytes",
              "type": "long",
            },
            Object {
              "name": "clientip",
              "type": "ip",
            },
            Object {
              "name": "event",
              "type": "struct",
            },
            Object {
              "name": "extension",
              "type": "string",
            },
            Object {
              "name": "geo",
              "type": "struct",
            },
            Object {
              "name": "host",
              "type": "string",
            },
            Object {
              "name": "index",
              "type": "string",
            },
            Object {
              "name": "ip",
              "type": "ip",
            },
            Object {
              "name": "machine",
              "type": "struct",
            },
            Object {
              "name": "memory",
              "type": "double",
            },
            Object {
              "name": "message",
              "type": "string",
            },
            Object {
              "name": "phpmemory",
              "type": "long",
            },
            Object {
              "name": "referer",
              "type": "string",
            },
            Object {
              "name": "request",
              "type": "string",
            },
            Object {
              "name": "response",
              "type": "string",
            },
            Object {
              "name": "tags",
              "type": "string",
            },
            Object {
              "name": "timestamp",
              "type": "timestamp",
            },
            Object {
              "name": "url",
              "type": "string",
            },
            Object {
              "name": "utc_time",
              "type": "timestamp",
            },
          ],
          "queriedFields": Array [
            Object {
              "name": "double_per_ip_bytes",
              "type": "long",
            },
            Object {
              "name": "host",
              "type": "text",
            },
            Object {
              "name": "ip_count",
              "type": "integer",
            },
            Object {
              "name": "per_ip_bytes",
              "type": "long",
            },
            Object {
              "name": "resp_code",
              "type": "text",
            },
            Object {
              "name": "sum_bytes",
              "type": "long",
            },
          ],
          "selectedFields": Array [],
          "unselectedFields": Array [],
        },
        "query": Object {},
        "rawVizData": Object {
          "data": Object {
            "host": Array [
              "artifacts.opensearch.org",
              "artifacts.opensearch.org",
              "artifacts.opensearch.org",
              "artifacts.opensearch.org",
              "artifacts.opensearch.org",
              "artifacts.opensearch.org",
              "cdn.opensearch-opensearch-opensearch.org",
              "cdn.opensearch-opensearch-opensearch.org",
              "cdn.opensearch-opensearch-opensearch.org",
              "cdn.opensearch-opensearch-opensearch.org",
            ],
            "max(bytes)": Array [
              19897,
              19904,
              19929,
              19856,
              19904,
              19929,
              9947,
              9998,
              9717,
              9973,
            ],
            "tags": Array [
              "error",
              "info",
              "login",
              "security",
              "success",
              "warning",
              "error",
              "info",
              "login",
              "security",
            ],
          },
          "jsonData": Array [
            Object {
              "host": "artifacts.opensearch.org",
              "max(bytes)": 19897,
              "tags": "error",
            },
            Object {
              "host": "artifacts.opensearch.org",
              "max(bytes)": 19904,
              "tags": "info",
            },
            Object {
              "host": "artifacts.opensearch.org",
              "max(bytes)": 19929,
              "tags": "login",
            },
            Object {
              "host": "artifacts.opensearch.org",
              "max(bytes)": 19856,
              "tags": "security",
            },
            Object {
              "host": "artifacts.opensearch.org",
              "max(bytes)": 19904,
              "tags": "success",
            },
            Object {
              "host": "artifacts.opensearch.org",
              "max(bytes)": 19929,
              "tags": "warning",
            },
            Object {
              "host": "cdn.opensearch-opensearch-opensearch.org",
              "max(bytes)": 9947,
              "tags": "error",
            },
            Object {
              "host": "cdn.opensearch-opensearch-opensearch.org",
              "max(bytes)": 9998,
              "tags": "info",
            },
            Object {
              "host": "cdn.opensearch-opensearch-opensearch.org",
              "max(bytes)": 9717,
              "tags": "login",
            },
            Object {
              "host": "cdn.opensearch-opensearch-opensearch.org",
              "max(bytes)": 9973,
              "tags": "security",
            },
          ],
          "metadata": Object {
            "fields": Array [
              Object {
                "name": "max(bytes)",
                "type": "long",
              },
              Object {
                "name": "host",
                "type": "text",
              },
              Object {
                "name": "tags",
                "type": "text",
              },
            ],
          },
          "size": 10,
          "status": 200,
        },
        "userConfigs": Object {
          "dataConfig": Object {
            "dimensions": Array [
              Object {
                "customLabel": "",
                "label": "host",
                "name": "host",
              },
              Object {
                "customLabel": "",
                "label": "tags",
                "name": "tags",
              },
            ],
            "series": Array [
              Object {
                "aggregation": "max",
                "customLabel": "",
                "label": "bytes",
                "name": "bytes",
              },
            ],
          },
        },
      },
      "vis": Object {
        "barwidth": 0.97,
        "category": "Visualizations",
        "categoryaxis": "xaxis",
        "component": [Function],
        "editorconfig": Object {
          "panelTabs": Array [
            Object {
              "editor": [Function],
              "id": "data-panel",
              "mapTo": "dataConfig",
              "name": "Style",
              "sections": Array [
                Object {
                  "editor": [Function],
                  "id": "tooltip_options",
                  "mapTo": "tooltipOptions",
                  "name": "Tooltip options",
                  "schemas": Array [
                    Object {
                      "component": null,
                      "mapTo": "tooltipMode",
                      "name": "Tooltip mode",
                      "props": Object {
                        "defaultSelections": Array [
                          Object {
                            "id": "show",
                            "name": "Show",
                          },
                        ],
                        "options": Array [
                          Object {
                            "id": "show",
                            "name": "Show",
                          },
                          Object {
                            "id": "hidden",
                            "name": "Hidden",
                          },
                        ],
                      },
                    },
                    Object {
                      "component": null,
                      "mapTo": "tooltipText",
                      "name": "Tooltip text",
                      "props": Object {
                        "defaultSelections": Array [
                          Object {
                            "id": "all",
                            "name": "All",
                          },
                        ],
                        "options": Array [
                          Object {
                            "id": "all",
                            "name": "All",
                          },
                          Object {
                            "id": "x",
                            "name": "Dimension",
                          },
                          Object {
                            "id": "y",
                            "name": "Series",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "editor": [Function],
                  "id": "legend",
                  "mapTo": "legend",
                  "name": "Legend",
                  "schemas": Array [
                    Object {
                      "component": null,
                      "mapTo": "showLegend",
                      "name": "Show legend",
                      "props": Object {
                        "defaultSelections": Array [
                          Object {
                            "id": "show",
                            "name": "Show",
                          },
                        ],
                        "options": Array [
                          Object {
                            "id": "show",
                            "name": "Show",
                          },
                          Object {
                            "id": "hidden",
                            "name": "Hidden",
                          },
                        ],
                      },
                    },
                    Object {
                      "component": null,
                      "mapTo": "position",
                      "name": "Position",
                      "props": Object {
                        "defaultSelections": Array [
                          Object {
                            "id": "v",
                            "name": "Right",
                          },
                        ],
                        "options": Array [
                          Object {
                            "id": "v",
                            "name": "Right",
                          },
                          Object {
                            "id": "h",
                            "name": "Bottom",
                          },
                        ],
                      },
                    },
                    Object {
                      "component": [Function],
                      "eleType": "input",
                      "mapTo": "legendSize",
                      "name": "Legend size",
                      "title": "Legend size",
                    },
                  ],
                },
                Object {
                  "editor": [Function],
                  "id": "chart_styles",
                  "mapTo": "chartStyles",
                  "name": "Chart styles",
                  "schemas": Array [
                    Object {
                      "component": [Function],
                      "eleType": "buttons",
                      "mapTo": "mode",
                      "name": "Mode",
                      "props": Object {
                        "defaultSelections": Array [
                          Object {
                            "id": "group",
                            "name": "Group",
                          },
                        ],
                        "options": Array [
                          Object {
                            "id": "group",
                            "name": "Group",
                          },
                          Object {
                            "id": "stack",
                            "name": "Stack",
                          },
                        ],
                      },
                    },
                    Object {
                      "component": [Function],
                      "eleType": "input",
                      "mapTo": "labelSize",
                      "name": "Label size",
                    },
                    Object {
                      "component": [Function],
                      "defaultState": 0,
                      "eleType": "slider",
                      "mapTo": "rotateBarLabels",
                      "name": "Rotate bar labels",
                      "props": Object {
                        "max": 90,
                        "min": -90,
                        "showTicks": true,
                        "ticks": Array [
                          Object {
                            "label": "-90°",
                            "value": -90,
                          },
                          Object {
                            "label": "-45°",
                            "value": -45,
                          },
                          Object {
                            "label": "0°",
                            "value": 0,
                          },
                          Object {
                            "label": "45°",
                            "value": 45,
                          },
                          Object {
                            "label": "90°",
                            "value": 90,
                          },
                        ],
                      },
                    },
                    Object {
                      "component": [Function],
                      "defaultState": 0.7,
                      "eleType": "slider",
                      "mapTo": "groupWidth",
                      "name": "Group width",
                      "props": Object {
                        "max": 1,
                        "step": 0.01,
                      },
                    },
                    Object {
                      "component": [Function],
                      "defaultState": 0.97,
                      "eleType": "slider",
                      "mapTo": "barWidth",
                      "name": "Bar width",
                      "props": Object {
                        "max": 1,
                        "step": 0.01,
                      },
                    },
                    Object {
                      "component": [Function],
                      "defaultState": 2,
                      "eleType": "slider",
                      "mapTo": "lineWidth",
                      "name": "Line width",
                      "props": Object {
                        "max": 10,
                      },
                    },
                    Object {
                      "component": [Function],
                      "defaultState": 70,
                      "eleType": "slider",
                      "mapTo": "fillOpacity",
                      "name": "Fill opacity",
                      "props": Object {
                        "max": 100,
                      },
                    },
                  ],
                },
                Object {
                  "editor": [Function],
                  "id": "color-theme",
                  "mapTo": "colorTheme",
                  "name": "Color theme",
                  "schemas": Array [],
                },
              ],
            },
            Object {
              "editor": [Function],
              "id": "availability-panel",
              "mapTo": "availabilityConfig",
              "name": "Availability",
            },
          ],
        },
        "fillopacity": 70,
        "fulllabel": "Vertical bar",
        "groupwidth": 0.7,
        "icon": [Function],
        "icontype": "visBarVerticalStacked",
        "id": "bar",
        "label": "Vertical bar",
        "labelangle": 0,
        "legendposition": "v",
        "linewidth": 2,
        "mode": "group",
        "name": "bar",
        "orientation": "v",
        "selection": Object {
          "dataLoss": "nothing",
        },
        "seriesaxis": "yaxis",
        "showlegend": "show",
        "type": "bar",
        "visconfig": Object {
          "config": Object {
            "displaylogo": false,
            "responsive": true,
          },
          "isUniColor": false,
          "layout": Object {
            "height": 1180,
            "legend": Object {
              "orientation": "v",
              "traceorder": "normal",
            },
            "margin": Object {
              "b": 30,
              "l": 60,
              "pad": 0,
              "r": 30,
              "t": 50,
            },
            "showlegend": true,
          },
        },
      },
    }
  }
  vizState={
    Array [
      Object {
        "aggregation": "max",
        "className": "color-theme-combo-box-option",
        "ctid": "ct_66861491-61c8-11ed-b89f-53a8c43cc17a",
        "customLabel": "",
        "label": "max(bytes)",
        "name": "bytes",
        "side": "left",
      },
    ]
  }
>
  <EuiAccordion
    arrowDisplay="left"
    buttonContent="Series position"
    id="configPanel__Series position"
    initialIsOpen={true}
    isLoading={false}
    isLoadingMessage={false}
    paddingSize="s"
  >
    <div
      className="euiAccordion euiAccordion-isOpen"
    >
      <div
        className="euiAccordion__triggerWrapper"
      >
        <button
          aria-controls="configPanel__Series position"
          aria-expanded={true}
          className="euiAccordion__button"
          id="random_html_id"
          onClick={[Function]}
          type="button"
        >
          <span
            className="euiAccordion__iconWrapper"
          >
            <EuiIcon
              className="euiAccordion__icon euiAccordion__icon-isOpen"
              size="m"
              type="arrowRight"
            >
              <EuiIconArrowRight
                aria-hidden={true}
                className="euiIcon euiIcon--medium euiAccordion__icon euiAccordion__icon-isOpen"
                focusable="false"
                role="img"
                style={null}
              >
                <svg
                  aria-hidden={true}
                  className="euiIcon euiIcon--medium euiAccordion__icon euiAccordion__icon-isOpen"
                  focusable="false"
                  height={16}
                  role="img"
                  style={null}
                  viewBox="0 0 16 16"
                  width={16}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M5.157 13.069l4.611-4.685a.546.546 0 000-.768L5.158 2.93a.552.552 0 010-.771.53.53 0 01.759 0l4.61 4.684c.631.641.63 1.672 0 2.312l-4.61 4.684a.53.53 0 01-.76 0 .552.552 0 010-.771z"
                    fillRule="nonzero"
                  />
                </svg>
              </EuiIconArrowRight>
            </EuiIcon>
          </span>
          <span
            className="euiIEFlexWrapFix"
          >
            Series position
          </span>
        </button>
      </div>
      <div
        aria-labelledby="random_html_id"
        className="euiAccordion__childWrapper"
        id="configPanel__Series position"
        role="region"
        tabIndex={-1}
      >
        <EuiResizeObserver
          onResize={[Function]}
        >
          <div>
            <div
              className="euiAccordion__padding--s"
            >
              <EuiButton
                data-test-subj="add-series-position-button"
                fullWidth={true}
                onClick={[Function]}
                size="s"
              >
                <EuiButtonDisplay
                  baseClassName="euiButton"
                  data-test-subj="add-series-position-button"
                  disabled={false}
                  element="button"
                  fullWidth={true}
                  isDisabled={false}
                  onClick={[Function]}
                  size="s"
                  type="button"
                >
                  <button
                    className="euiButton euiButton--primary euiButton--small euiButton--fullWidth"
                    data-test-subj="add-series-position-button"
                    disabled={false}
                    onClick={[Function]}
                    style={
                      Object {
                        "minWidth": undefined,
                      }
                    }
                    type="button"
                  >
                    <EuiButtonContent
                      className="euiButton__content"
                      iconSide="left"
                      textProps={
                        Object {
                          "className": "euiButton__text",
                        }
                      }
                    >
                      <span
                        className="euiButtonContent euiButton__content"
                      >
                        <span
                          className="euiButton__text"
                        >
                          + Add label position
                        </span>
                      </span>
                    </EuiButtonContent>
                  </button>
                </EuiButtonDisplay>
              </EuiButton>
              <EuiSpacer
                size="s"
              >
                <div
                  className="euiSpacer euiSpacer--s"
                />
              </EuiSpacer>
              <EuiFormRow
                describedByIds={Array []}
                display="row"
                fullWidth={true}
                hasChildLabel={true}
                hasEmptyLabelSpace={false}
                label=""
                labelType="label"
              >
                <div
                  className="euiFormRow euiFormRow--fullWidth"
                  id="random_html_id-row"
                >
                  <div
                    className="euiFormRow__fieldWrapper"
                  >
                    <EuiFlexGroup
                      alignItems="center"
                      gutterSize="xs"
                      id="random_html_id"
                      onBlur={[Function]}
                      onFocus={[Function]}
                    >
                      <div
                        className="euiFlexGroup euiFlexGroup--gutterExtraSmall euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow euiFlexGroup--responsive"
                        id="random_html_id"
                        onBlur={[Function]}
                        onFocus={[Function]}
                      >
                        <EuiFlexItem
                          grow={4}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrow4"
                          >
                            <EuiFormRow
                              describedByIds={Array []}
                              display="row"
                              fullWidth={false}
                              hasChildLabel={true}
                              hasEmptyLabelSpace={false}
                              helpText="Field"
                              labelType="label"
                            >
                              <div
                                className="euiFormRow"
                                id="random_html_id-row"
                              >
                                <div
                                  className="euiFormRow__fieldWrapper"
                                >
                                  <EuiComboBox
                                    aria-describedby="random_html_id-help-0"
                                    aria-label="series-dropdown"
                                    async={false}
                                    compressed={false}
                                    fullWidth={false}
                                    id="random_html_id"
                                    isClearable={true}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    options={Array []}
                                    placeholder="Select a field"
                                    selectedOptions={
                                      Array [
                                        Object {
                                          "aggregation": "max",
                                          "className": "color-theme-combo-box-option",
                                          "ctid": "ct_66861491-61c8-11ed-b89f-53a8c43cc17a",
                                          "customLabel": "",
                                          "label": "max(bytes)",
                                          "name": "bytes",
                                          "side": "left",
                                        },
                                      ]
                                    }
                                    singleSelection={true}
                                    sortMatchesBy="none"
                                  >
                                    <div
                                      aria-describedby="random_html_id-help-0"
                                      aria-expanded={false}
                                      aria-haspopup="listbox"
                                      aria-label="series-dropdown"
                                      className="euiComboBox"
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      role="combobox"
                                    >
                                      <EuiComboBoxInput
                                        autoSizeInputRef={[Function]}
                                        compressed={false}
                                        fullWidth={false}
                                        hasSelectedOptions={true}
                                        id="random_html_id"
                                        inputRef={[Function]}
                                        isListOpen={false}
                                        noIcon={false}
                                        onChange={[Function]}
                                        onClear={[Function]}
                                        onClick={[Function]}
                                        onCloseListClick={[Function]}
                                        onFocus={[Function]}
                                        onOpenListClick={[Function]}
                                        onRemoveOption={[Function]}
                                        placeholder="Select a field"
                                        rootId={[Function]}
                                        searchValue=""
                                        selectedOptions={
                                          Array [
                                            Object {
                                              "aggregation": "max",
                                              "className": "color-theme-combo-box-option",
                                              "ctid": "ct_66861491-61c8-11ed-b89f-53a8c43cc17a",
                                              "customLabel": "",
                                              "label": "max(bytes)",
                                              "name": "bytes",
                                              "side": "left",
                                            },
                                          ]
                                        }
                                        singleSelection={true}
                                        toggleButtonRef={[Function]}
                                        updatePosition={[Function]}
                                        value="max(bytes)"
                                      >
                                        <EuiFormControlLayout
                                          clear={
                                            Object {
                                              "data-test-subj": "comboBoxClearButton",
                                              "onClick": [Function],
                                            }
                                          }
                                          compressed={false}
                                          fullWidth={false}
                                          icon={
                                            Object {
                                              "aria-label": "Open list of options",
                                              "data-test-subj": "comboBoxToggleListButton",
                                              "disabled": undefined,
                                              "onClick": [Function],
                                              "ref": [Function],
                                              "side": "right",
                                              "type": "arrowDown",
                                            }
                                          }
                                        >
                                          <div
                                            className="euiFormControlLayout"
                                          >
                                            <div
                                              className="euiFormControlLayout__childrenWrapper"
                                            >
                                              <div
                                                className="euiComboBox__inputWrap euiComboBox__inputWrap--noWrap euiComboBox__inputWrap-isClearable"
                                                data-test-subj="comboBoxInput"
                                                onClick={[Function]}
                                                tabIndex={-1}
                                              >
                                                <EuiComboBoxPill
                                                  aggregation="max"
                                                  asPlainText={false}
                                                  className="color-theme-combo-box-option"
                                                  color="hollow"
                                                  ctid="ct_66861491-61c8-11ed-b89f-53a8c43cc17a"
                                                  customLabel=""
                                                  key="max(bytes)"
                                                  name="bytes"
                                                  option={
                                                    Object {
                                                      "aggregation": "max",
                                                      "className": "color-theme-combo-box-option",
                                                      "ctid": "ct_66861491-61c8-11ed-b89f-53a8c43cc17a",
                                                      "customLabel": "",
                                                      "label": "max(bytes)",
                                                      "name": "bytes",
                                                      "side": "left",
                                                    }
                                                  }
                                                  side="left"
                                                >
                                                  <EuiBadge
                                                    aggregation="max"
                                                    className="euiComboBoxPill color-theme-combo-box-option"
                                                    color="hollow"
                                                    ctid="ct_66861491-61c8-11ed-b89f-53a8c43cc17a"
                                                    customLabel=""
                                                    name="bytes"
                                                    side="left"
                                                    title="max(bytes)"
                                                  >
                                                    <EuiInnerText>
                                                      <span
                                                        aggregation="max"
                                                        className="euiBadge euiBadge--hollow euiBadge--iconLeft euiComboBoxPill color-theme-combo-box-option"
                                                        ctid="ct_66861491-61c8-11ed-b89f-53a8c43cc17a"
                                                        customLabel=""
                                                        name="bytes"
                                                        side="left"
                                                        title="max(bytes)"
                                                      >
                                                        <span
                                                          className="euiBadge__content"
                                                        >
                                                          <span
                                                            className="euiBadge__text"
                                                          >
                                                            max(bytes)
                                                          </span>
                                                        </span>
                                                      </span>
                                                    </EuiInnerText>
                                                  </EuiBadge>
                                                </EuiComboBoxPill>
                                                <AutosizeInput
                                                  aria-controls=""
                                                  className="euiComboBox__input"
                                                  data-test-subj="comboBoxSearchInput"
                                                  id="random_html_id"
                                                  injectStyles={true}
                                                  inputRef={[Function]}
                                                  minWidth={1}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  role="textbox"
                                                  style={
                                                    Object {
                                                      "fontSize": 14,
                                                    }
                                                  }
                                                  value=""
                                                >
                                                  <div
                                                    className="euiComboBox__input"
                                                    style={
                                                      Object {
                                                        "display": "inline-block",
                                                        "fontSize": 14,
                                                      }
                                                    }
                                                  >
                                                    <input
                                                      aria-controls=""
                                                      data-test-subj="comboBoxSearchInput"
                                                      id="random_html_id"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      role="textbox"
                                                      style={
                                                        Object {
                                                          "boxSizing": "content-box",
                                                          "width": "2px",
                                                        }
                                                      }
                                                      value=""
                                                    />
                                                    <div
                                                      style={
                                                        Object {
                                                          "height": 0,
                                                          "left": 0,
                                                          "overflow": "scroll",
                                                          "position": "absolute",
                                                          "top": 0,
                                                          "visibility": "hidden",
                                                          "whiteSpace": "pre",
                                                        }
                                                      }
                                                    />
                                                  </div>
                                                </AutosizeInput>
                                              </div>
                                              <EuiFormControlLayoutIcons
                                                clear={
                                                  Object {
                                                    "data-test-subj": "comboBoxClearButton",
                                                    "onClick": [Function],
                                                  }
                                                }
                                                compressed={false}
                                                icon={
                                                  Object {
                                                    "aria-label": "Open list of options",
                                                    "data-test-subj": "comboBoxToggleListButton",
                                                    "disabled": undefined,
                                                    "onClick": [Function],
                                                    "ref": [Function],
                                                    "side": "right",
                                                    "type": "arrowDown",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                                >
                                                  <EuiFormControlLayoutClearButton
                                                    data-test-subj="comboBoxClearButton"
                                                    onClick={[Function]}
                                                    size="m"
                                                  >
                                                    <EuiI18n
                                                      default="Clear input"
                                                      token="euiFormControlLayoutClearButton.label"
                                                    >
                                                      <button
                                                        aria-label="Clear input"
                                                        className="euiFormControlLayoutClearButton"
                                                        data-test-subj="comboBoxClearButton"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <EuiIcon
                                                          className="euiFormControlLayoutClearButton__icon"
                                                          type="cross"
                                                        >
                                                          <EuiIconEmpty
                                                            aria-hidden={true}
                                                            className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutClearButton__icon"
                                                            focusable="false"
                                                            role="img"
                                                            style={null}
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutClearButton__icon"
                                                              focusable="false"
                                                              height={16}
                                                              role="img"
                                                              style={null}
                                                              viewBox="0 0 16 16"
                                                              width={16}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            />
                                                          </EuiIconEmpty>
                                                        </EuiIcon>
                                                      </button>
                                                    </EuiI18n>
                                                  </EuiFormControlLayoutClearButton>
                                                  <EuiFormControlLayoutCustomIcon
                                                    aria-label="Open list of options"
                                                    data-test-subj="comboBoxToggleListButton"
                                                    iconRef={[Function]}
                                                    onClick={[Function]}
                                                    size="m"
                                                    type="arrowDown"
                                                  >
                                                    <button
                                                      aria-label="Open list of options"
                                                      className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                                      data-test-subj="comboBoxToggleListButton"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      <EuiIcon
                                                        aria-hidden="true"
                                                        className="euiFormControlLayoutCustomIcon__icon"
                                                        size="m"
                                                        type="arrowDown"
                                                      >
                                                        <EuiIconEmpty
                                                          aria-hidden={true}
                                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                          focusable="false"
                                                          role="img"
                                                          style={null}
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                            focusable="false"
                                                            height={16}
                                                            role="img"
                                                            style={null}
                                                            viewBox="0 0 16 16"
                                                            width={16}
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          />
                                                        </EuiIconEmpty>
                                                      </EuiIcon>
                                                    </button>
                                                  </EuiFormControlLayoutCustomIcon>
                                                </div>
                                              </EuiFormControlLayoutIcons>
                                            </div>
                                          </div>
                                        </EuiFormControlLayout>
                                      </EuiComboBoxInput>
                                    </div>
                                  </EuiComboBox>
                                  <EuiFormHelpText
                                    className="euiFormRow__text"
                                    id="random_html_id-help-0"
                                    key="Field"
                                  >
                                    <div
                                      className="euiFormHelpText euiFormRow__text"
                                      id="random_html_id-help-0"
                                    >
                                      Field
                                    </div>
                                  </EuiFormHelpText>
                                </div>
                              </div>
                            </EuiFormRow>
                          </div>
                        </EuiFlexItem>
                        <EuiFlexItem
                          grow={3}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrow3"
                          >
                            <EuiFormRow
                              describedByIds={Array []}
                              display="row"
                              fullWidth={false}
                              hasChildLabel={true}
                              hasEmptyLabelSpace={false}
                              helpText="Position"
                              labelType="label"
                            >
                              <div
                                className="euiFormRow"
                                id="random_html_id-row"
                              >
                                <div
                                  className="euiFormRow__fieldWrapper"
                                >
                                  <EuiComboBox
                                    aria-describedby="random_html_id-help-0"
                                    aria-label="series-position-dropdown"
                                    async={false}
                                    compressed={false}
                                    fullWidth={false}
                                    id="random_html_id"
                                    isClearable={true}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    options={
                                      Array [
                                        Object {
                                          "id": "random_html_id",
                                          "label": "Left",
                                          "side": "left",
                                        },
                                        Object {
                                          "id": "random_html_id",
                                          "label": "Right",
                                          "side": "right",
                                        },
                                      ]
                                    }
                                    placeholder="Select position"
                                    selectedOptions={
                                      Array [
                                        Object {
                                          "id": "random_html_id",
                                          "label": "Left",
                                          "side": "left",
                                        },
                                      ]
                                    }
                                    singleSelection={true}
                                    sortMatchesBy="none"
                                  >
                                    <div
                                      aria-describedby="random_html_id-help-0"
                                      aria-expanded={false}
                                      aria-haspopup="listbox"
                                      aria-label="series-position-dropdown"
                                      className="euiComboBox"
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      role="combobox"
                                    >
                                      <EuiComboBoxInput
                                        autoSizeInputRef={[Function]}
                                        compressed={false}
                                        fullWidth={false}
                                        hasSelectedOptions={true}
                                        id="random_html_id"
                                        inputRef={[Function]}
                                        isListOpen={false}
                                        noIcon={false}
                                        onChange={[Function]}
                                        onClear={[Function]}
                                        onClick={[Function]}
                                        onCloseListClick={[Function]}
                                        onFocus={[Function]}
                                        onOpenListClick={[Function]}
                                        onRemoveOption={[Function]}
                                        placeholder="Select position"
                                        rootId={[Function]}
                                        searchValue=""
                                        selectedOptions={
                                          Array [
                                            Object {
                                              "id": "random_html_id",
                                              "label": "Left",
                                              "side": "left",
                                            },
                                          ]
                                        }
                                        singleSelection={true}
                                        toggleButtonRef={[Function]}
                                        updatePosition={[Function]}
                                        value="Left"
                                      >
                                        <EuiFormControlLayout
                                          clear={
                                            Object {
                                              "data-test-subj": "comboBoxClearButton",
                                              "onClick": [Function],
                                            }
                                          }
                                          compressed={false}
                                          fullWidth={false}
                                          icon={
                                            Object {
                                              "aria-label": "Open list of options",
                                              "data-test-subj": "comboBoxToggleListButton",
                                              "disabled": undefined,
                                              "onClick": [Function],
                                              "ref": [Function],
                                              "side": "right",
                                              "type": "arrowDown",
                                            }
                                          }
                                        >
                                          <div
                                            className="euiFormControlLayout"
                                          >
                                            <div
                                              className="euiFormControlLayout__childrenWrapper"
                                            >
                                              <div
                                                className="euiComboBox__inputWrap euiComboBox__inputWrap--noWrap euiComboBox__inputWrap-isClearable"
                                                data-test-subj="comboBoxInput"
                                                onClick={[Function]}
                                                tabIndex={-1}
                                              >
                                                <EuiComboBoxPill
                                                  asPlainText={false}
                                                  color="hollow"
                                                  id="random_html_id"
                                                  key="left"
                                                  option={
                                                    Object {
                                                      "id": "random_html_id",
                                                      "label": "Left",
                                                      "side": "left",
                                                    }
                                                  }
                                                  side="left"
                                                >
                                                  <EuiBadge
                                                    className="euiComboBoxPill"
                                                    color="hollow"
                                                    id="random_html_id"
                                                    side="left"
                                                    title="Left"
                                                  >
                                                    <EuiInnerText>
                                                      <span
                                                        className="euiBadge euiBadge--hollow euiBadge--iconLeft euiComboBoxPill"
                                                        id="random_html_id"
                                                        side="left"
                                                        title="Left"
                                                      >
                                                        <span
                                                          className="euiBadge__content"
                                                        >
                                                          <span
                                                            className="euiBadge__text"
                                                          >
                                                            Left
                                                          </span>
                                                        </span>
                                                      </span>
                                                    </EuiInnerText>
                                                  </EuiBadge>
                                                </EuiComboBoxPill>
                                                <AutosizeInput
                                                  aria-controls=""
                                                  className="euiComboBox__input"
                                                  data-test-subj="comboBoxSearchInput"
                                                  id="random_html_id"
                                                  injectStyles={true}
                                                  inputRef={[Function]}
                                                  minWidth={1}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  role="textbox"
                                                  style={
                                                    Object {
                                                      "fontSize": 14,
                                                    }
                                                  }
                                                  value=""
                                                >
                                                  <div
                                                    className="euiComboBox__input"
                                                    style={
                                                      Object {
                                                        "display": "inline-block",
                                                        "fontSize": 14,
                                                      }
                                                    }
                                                  >
                                                    <input
                                                      aria-controls=""
                                                      data-test-subj="comboBoxSearchInput"
                                                      id="random_html_id"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      role="textbox"
                                                      style={
                                                        Object {
                                                          "boxSizing": "content-box",
                                                          "width": "2px",
                                                        }
                                                      }
                                                      value=""
                                                    />
                                                    <div
                                                      style={
                                                        Object {
                                                          "height": 0,
                                                          "left": 0,
                                                          "overflow": "scroll",
                                                          "position": "absolute",
                                                          "top": 0,
                                                          "visibility": "hidden",
                                                          "whiteSpace": "pre",
                                                        }
                                                      }
                                                    />
                                                  </div>
                                                </AutosizeInput>
                                              </div>
                                              <EuiFormControlLayoutIcons
                                                clear={
                                                  Object {
                                                    "data-test-subj": "comboBoxClearButton",
                                                    "onClick": [Function],
                                                  }
                                                }
                                                compressed={false}
                                                icon={
                                                  Object {
                                                    "aria-label": "Open list of options",
                                                    "data-test-subj": "comboBoxToggleListButton",
                                                    "disabled": undefined,
                                                    "onClick": [Function],
                                                    "ref": [Function],
                                                    "side": "right",
                                                    "type": "arrowDown",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                                >
                                                  <EuiFormControlLayoutClearButton
                                                    data-test-subj="comboBoxClearButton"
                                                    onClick={[Function]}
                                                    size="m"
                                                  >
                                                    <EuiI18n
                                                      default="Clear input"
                                                      token="euiFormControlLayoutClearButton.label"
                                                    >
                                                      <button
                                                        aria-label="Clear input"
                                                        className="euiFormControlLayoutClearButton"
                                                        data-test-subj="comboBoxClearButton"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <EuiIcon
                                                          className="euiFormControlLayoutClearButton__icon"
                                                          type="cross"
                                                        >
                                                          <EuiIconEmpty
                                                            aria-hidden={true}
                                                            className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutClearButton__icon"
                                                            focusable="false"
                                                            role="img"
                                                            style={null}
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutClearButton__icon"
                                                              focusable="false"
                                                              height={16}
                                                              role="img"
                                                              style={null}
                                                              viewBox="0 0 16 16"
                                                              width={16}
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            />
                                                          </EuiIconEmpty>
                                                        </EuiIcon>
                                                      </button>
                                                    </EuiI18n>
                                                  </EuiFormControlLayoutClearButton>
                                                  <EuiFormControlLayoutCustomIcon
                                                    aria-label="Open list of options"
                                                    data-test-subj="comboBoxToggleListButton"
                                                    iconRef={[Function]}
                                                    onClick={[Function]}
                                                    size="m"
                                                    type="arrowDown"
                                                  >
                                                    <button
                                                      aria-label="Open list of options"
                                                      className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                                      data-test-subj="comboBoxToggleListButton"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      <EuiIcon
                                                        aria-hidden="true"
                                                        className="euiFormControlLayoutCustomIcon__icon"
                                                        size="m"
                                                        type="arrowDown"
                                                      >
                                                        <EuiIconEmpty
                                                          aria-hidden={true}
                                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                          focusable="false"
                                                          role="img"
                                                          style={null}
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                            focusable="false"
                                                            height={16}
                                                            role="img"
                                                            style={null}
                                                            viewBox="0 0 16 16"
                                                            width={16}
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          />
                                                        </EuiIconEmpty>
                                                      </EuiIcon>
                                                    </button>
                                                  </EuiFormControlLayoutCustomIcon>
                                                </div>
                                              </EuiFormControlLayoutIcons>
                                            </div>
                                          </div>
                                        </EuiFormControlLayout>
                                      </EuiComboBoxInput>
                                    </div>
                                  </EuiComboBox>
                                  <EuiFormHelpText
                                    className="euiFormRow__text"
                                    id="random_html_id-help-0"
                                    key="Position"
                                  >
                                    <div
                                      className="euiFormHelpText euiFormRow__text"
                                      id="random_html_id-help-0"
                                    >
                                      Position
                                    </div>
                                  </EuiFormHelpText>
                                </div>
                              </div>
                            </EuiFormRow>
                          </div>
                        </EuiFlexItem>
                        <EuiFlexItem
                          grow={1}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrow1"
                          >
                            <EuiFormRow
                              describedByIds={Array []}
                              display="row"
                              fullWidth={false}
                              hasChildLabel={true}
                              hasEmptyLabelSpace={false}
                              labelType="label"
                            >
                              <div
                                className="euiFormRow"
                                id="random_html_id-row"
                              >
                                <div
                                  className="euiFormRow__fieldWrapper"
                                >
                                  <EuiIcon
                                    id="random_html_id"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    type="trash"
                                  >
                                    <EuiIconEmpty
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiIcon-isLoading"
                                      focusable="false"
                                      id="random_html_id"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      role="img"
                                      style={null}
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiIcon-isLoading"
                                        focusable="false"
                                        height={16}
                                        id="random_html_id"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        role="img"
                                        style={null}
                                        viewBox="0 0 16 16"
                                        width={16}
                                        xmlns="http://www.w3.org/2000/svg"
                                      />
                                    </EuiIconEmpty>
                                  </EuiIcon>
                                </div>
                              </div>
                            </EuiFormRow>
                          </div>
                        </EuiFlexItem>
                      </div>
                    </EuiFlexGroup>
                  </div>
                </div>
              </EuiFormRow>
            </div>
          </div>
        </EuiResizeObserver>
      </div>
    </div>
  </EuiAccordion>
</ConfigYAxisSide>
`;

exports[`ConfigYAxisSide component Renders ConfigYAxisSide with empty data 1`] = `
<ConfigYAxisSide
  handleConfigChange={[MockFunction]}
  schemas={Array []}
  sectionName="Series position"
  visualizations={
    Object {
      "data": Object {
        "appData": Object {
          "fromApp": false,
        },
        "defaultAxes": Object {
          "xaxis": Array [
            Object {
              "label": "tags",
              "name": "tags",
              "type": "text",
            },
          ],
          "yaxis": Array [
            Object {
              "label": "max(bytes)",
              "name": "max(bytes)",
              "type": "long",
            },
            Object {
              "label": "host",
              "name": "host",
              "type": "text",
            },
          ],
        },
        "indexFields": Object {
          "availableFields": Array [
            Object {
              "name": "agent",
              "type": "string",
            },
            Object {
              "name": "bytes",
              "type": "long",
            },
            Object {
              "name": "clientip",
              "type": "ip",
            },
            Object {
              "name": "event",
              "type": "struct",
            },
            Object {
              "name": "extension",
              "type": "string",
            },
            Object {
              "name": "geo",
              "type": "struct",
            },
            Object {
              "name": "host",
              "type": "string",
            },
            Object {
              "name": "index",
              "type": "string",
            },
            Object {
              "name": "ip",
              "type": "ip",
            },
            Object {
              "name": "machine",
              "type": "struct",
            },
            Object {
              "name": "memory",
              "type": "double",
            },
            Object {
              "name": "message",
              "type": "string",
            },
            Object {
              "name": "phpmemory",
              "type": "long",
            },
            Object {
              "name": "referer",
              "type": "string",
            },
            Object {
              "name": "request",
              "type": "string",
            },
            Object {
              "name": "response",
              "type": "string",
            },
            Object {
              "name": "tags",
              "type": "string",
            },
            Object {
              "name": "timestamp",
              "type": "timestamp",
            },
            Object {
              "name": "url",
              "type": "string",
            },
            Object {
              "name": "utc_time",
              "type": "timestamp",
            },
          ],
          "queriedFields": Array [
            Object {
              "name": "double_per_ip_bytes",
              "type": "long",
            },
            Object {
              "name": "host",
              "type": "text",
            },
            Object {
              "name": "ip_count",
              "type": "integer",
            },
            Object {
              "name": "per_ip_bytes",
              "type": "long",
            },
            Object {
              "name": "resp_code",
              "type": "text",
            },
            Object {
              "name": "sum_bytes",
              "type": "long",
            },
          ],
          "selectedFields": Array [],
          "unselectedFields": Array [],
        },
        "query": Object {},
        "rawVizData": Object {
          "data": Object {
            "host": Array [
              "artifacts.opensearch.org",
              "artifacts.opensearch.org",
              "artifacts.opensearch.org",
              "artifacts.opensearch.org",
              "artifacts.opensearch.org",
              "artifacts.opensearch.org",
              "cdn.opensearch-opensearch-opensearch.org",
              "cdn.opensearch-opensearch-opensearch.org",
              "cdn.opensearch-opensearch-opensearch.org",
              "cdn.opensearch-opensearch-opensearch.org",
            ],
            "max(bytes)": Array [
              19897,
              19904,
              19929,
              19856,
              19904,
              19929,
              9947,
              9998,
              9717,
              9973,
            ],
            "tags": Array [
              "error",
              "info",
              "login",
              "security",
              "success",
              "warning",
              "error",
              "info",
              "login",
              "security",
            ],
          },
          "jsonData": Array [
            Object {
              "host": "artifacts.opensearch.org",
              "max(bytes)": 19897,
              "tags": "error",
            },
            Object {
              "host": "artifacts.opensearch.org",
              "max(bytes)": 19904,
              "tags": "info",
            },
            Object {
              "host": "artifacts.opensearch.org",
              "max(bytes)": 19929,
              "tags": "login",
            },
            Object {
              "host": "artifacts.opensearch.org",
              "max(bytes)": 19856,
              "tags": "security",
            },
            Object {
              "host": "artifacts.opensearch.org",
              "max(bytes)": 19904,
              "tags": "success",
            },
            Object {
              "host": "artifacts.opensearch.org",
              "max(bytes)": 19929,
              "tags": "warning",
            },
            Object {
              "host": "cdn.opensearch-opensearch-opensearch.org",
              "max(bytes)": 9947,
              "tags": "error",
            },
            Object {
              "host": "cdn.opensearch-opensearch-opensearch.org",
              "max(bytes)": 9998,
              "tags": "info",
            },
            Object {
              "host": "cdn.opensearch-opensearch-opensearch.org",
              "max(bytes)": 9717,
              "tags": "login",
            },
            Object {
              "host": "cdn.opensearch-opensearch-opensearch.org",
              "max(bytes)": 9973,
              "tags": "security",
            },
          ],
          "metadata": Object {
            "fields": Array [
              Object {
                "name": "max(bytes)",
                "type": "long",
              },
              Object {
                "name": "host",
                "type": "text",
              },
              Object {
                "name": "tags",
                "type": "text",
              },
            ],
          },
          "size": 10,
          "status": 200,
        },
        "userConfigs": Object {
          "dataConfig": Object {
            "dimensions": Array [
              Object {
                "customLabel": "",
                "label": "host",
                "name": "host",
              },
              Object {
                "customLabel": "",
                "label": "tags",
                "name": "tags",
              },
            ],
            "series": Array [
              Object {
                "aggregation": "max",
                "customLabel": "",
                "label": "bytes",
                "name": "bytes",
              },
            ],
          },
        },
      },
      "vis": Object {
        "barwidth": 0.97,
        "category": "Visualizations",
        "categoryaxis": "xaxis",
        "component": [Function],
        "editorconfig": Object {
          "panelTabs": Array [
            Object {
              "editor": [Function],
              "id": "data-panel",
              "mapTo": "dataConfig",
              "name": "Style",
              "sections": Array [
                Object {
                  "editor": [Function],
                  "id": "tooltip_options",
                  "mapTo": "tooltipOptions",
                  "name": "Tooltip options",
                  "schemas": Array [
                    Object {
                      "component": null,
                      "mapTo": "tooltipMode",
                      "name": "Tooltip mode",
                      "props": Object {
                        "defaultSelections": Array [
                          Object {
                            "id": "show",
                            "name": "Show",
                          },
                        ],
                        "options": Array [
                          Object {
                            "id": "show",
                            "name": "Show",
                          },
                          Object {
                            "id": "hidden",
                            "name": "Hidden",
                          },
                        ],
                      },
                    },
                    Object {
                      "component": null,
                      "mapTo": "tooltipText",
                      "name": "Tooltip text",
                      "props": Object {
                        "defaultSelections": Array [
                          Object {
                            "id": "all",
                            "name": "All",
                          },
                        ],
                        "options": Array [
                          Object {
                            "id": "all",
                            "name": "All",
                          },
                          Object {
                            "id": "x",
                            "name": "Dimension",
                          },
                          Object {
                            "id": "y",
                            "name": "Series",
                          },
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "editor": [Function],
                  "id": "legend",
                  "mapTo": "legend",
                  "name": "Legend",
                  "schemas": Array [
                    Object {
                      "component": null,
                      "mapTo": "showLegend",
                      "name": "Show legend",
                      "props": Object {
                        "defaultSelections": Array [
                          Object {
                            "id": "show",
                            "name": "Show",
                          },
                        ],
                        "options": Array [
                          Object {
                            "id": "show",
                            "name": "Show",
                          },
                          Object {
                            "id": "hidden",
                            "name": "Hidden",
                          },
                        ],
                      },
                    },
                    Object {
                      "component": null,
                      "mapTo": "position",
                      "name": "Position",
                      "props": Object {
                        "defaultSelections": Array [
                          Object {
                            "id": "v",
                            "name": "Right",
                          },
                        ],
                        "options": Array [
                          Object {
                            "id": "v",
                            "name": "Right",
                          },
                          Object {
                            "id": "h",
                            "name": "Bottom",
                          },
                        ],
                      },
                    },
                    Object {
                      "component": [Function],
                      "eleType": "input",
                      "mapTo": "legendSize",
                      "name": "Legend size",
                      "title": "Legend size",
                    },
                  ],
                },
                Object {
                  "editor": [Function],
                  "id": "chart_styles",
                  "mapTo": "chartStyles",
                  "name": "Chart styles",
                  "schemas": Array [
                    Object {
                      "component": [Function],
                      "eleType": "buttons",
                      "mapTo": "mode",
                      "name": "Mode",
                      "props": Object {
                        "defaultSelections": Array [
                          Object {
                            "id": "group",
                            "name": "Group",
                          },
                        ],
                        "options": Array [
                          Object {
                            "id": "group",
                            "name": "Group",
                          },
                          Object {
                            "id": "stack",
                            "name": "Stack",
                          },
                        ],
                      },
                    },
                    Object {
                      "component": [Function],
                      "eleType": "input",
                      "mapTo": "labelSize",
                      "name": "Label size",
                    },
                    Object {
                      "component": [Function],
                      "defaultState": 0,
                      "eleType": "slider",
                      "mapTo": "rotateBarLabels",
                      "name": "Rotate bar labels",
                      "props": Object {
                        "max": 90,
                        "min": -90,
                        "showTicks": true,
                        "ticks": Array [
                          Object {
                            "label": "-90°",
                            "value": -90,
                          },
                          Object {
                            "label": "-45°",
                            "value": -45,
                          },
                          Object {
                            "label": "0°",
                            "value": 0,
                          },
                          Object {
                            "label": "45°",
                            "value": 45,
                          },
                          Object {
                            "label": "90°",
                            "value": 90,
                          },
                        ],
                      },
                    },
                    Object {
                      "component": [Function],
                      "defaultState": 0.7,
                      "eleType": "slider",
                      "mapTo": "groupWidth",
                      "name": "Group width",
                      "props": Object {
                        "max": 1,
                        "step": 0.01,
                      },
                    },
                    Object {
                      "component": [Function],
                      "defaultState": 0.97,
                      "eleType": "slider",
                      "mapTo": "barWidth",
                      "name": "Bar width",
                      "props": Object {
                        "max": 1,
                        "step": 0.01,
                      },
                    },
                    Object {
                      "component": [Function],
                      "defaultState": 2,
                      "eleType": "slider",
                      "mapTo": "lineWidth",
                      "name": "Line width",
                      "props": Object {
                        "max": 10,
                      },
                    },
                    Object {
                      "component": [Function],
                      "defaultState": 70,
                      "eleType": "slider",
                      "mapTo": "fillOpacity",
                      "name": "Fill opacity",
                      "props": Object {
                        "max": 100,
                      },
                    },
                  ],
                },
                Object {
                  "editor": [Function],
                  "id": "color-theme",
                  "mapTo": "colorTheme",
                  "name": "Color theme",
                  "schemas": Array [],
                },
              ],
            },
            Object {
              "editor": [Function],
              "id": "availability-panel",
              "mapTo": "availabilityConfig",
              "name": "Availability",
            },
          ],
        },
        "fillopacity": 70,
        "fulllabel": "Vertical bar",
        "groupwidth": 0.7,
        "icon": [Function],
        "icontype": "visBarVerticalStacked",
        "id": "bar",
        "label": "Vertical bar",
        "labelangle": 0,
        "legendposition": "v",
        "linewidth": 2,
        "mode": "group",
        "name": "bar",
        "orientation": "v",
        "selection": Object {
          "dataLoss": "nothing",
        },
        "seriesaxis": "yaxis",
        "showlegend": "show",
        "type": "bar",
        "visconfig": Object {
          "config": Object {
            "displaylogo": false,
            "responsive": true,
          },
          "isUniColor": false,
          "layout": Object {
            "height": 1180,
            "legend": Object {
              "orientation": "v",
              "traceorder": "normal",
            },
            "margin": Object {
              "b": 30,
              "l": 60,
              "pad": 0,
              "r": 30,
              "t": 50,
            },
            "showlegend": true,
          },
        },
      },
    }
  }
  vizState={Array []}
>
  <EuiAccordion
    arrowDisplay="left"
    buttonContent="Series position"
    id="configPanel__Series position"
    initialIsOpen={true}
    isLoading={false}
    isLoadingMessage={false}
    paddingSize="s"
  >
    <div
      className="euiAccordion euiAccordion-isOpen"
    >
      <div
        className="euiAccordion__triggerWrapper"
      >
        <button
          aria-controls="configPanel__Series position"
          aria-expanded={true}
          className="euiAccordion__button"
          id="random_html_id"
          onClick={[Function]}
          type="button"
        >
          <span
            className="euiAccordion__iconWrapper"
          >
            <EuiIcon
              className="euiAccordion__icon euiAccordion__icon-isOpen"
              size="m"
              type="arrowRight"
            >
              <EuiIconEmpty
                aria-hidden={true}
                className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                focusable="false"
                role="img"
                style={null}
              >
                <svg
                  aria-hidden={true}
                  className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon euiAccordion__icon-isOpen"
                  focusable="false"
                  height={16}
                  role="img"
                  style={null}
                  viewBox="0 0 16 16"
                  width={16}
                  xmlns="http://www.w3.org/2000/svg"
                />
              </EuiIconEmpty>
            </EuiIcon>
          </span>
          <span
            className="euiIEFlexWrapFix"
          >
            Series position
          </span>
        </button>
      </div>
      <div
        aria-labelledby="random_html_id"
        className="euiAccordion__childWrapper"
        id="configPanel__Series position"
        role="region"
        tabIndex={-1}
      >
        <EuiResizeObserver
          onResize={[Function]}
        >
          <div>
            <div
              className="euiAccordion__padding--s"
            >
              <EuiButton
                data-test-subj="add-series-position-button"
                fullWidth={true}
                onClick={[Function]}
                size="s"
              >
                <EuiButtonDisplay
                  baseClassName="euiButton"
                  data-test-subj="add-series-position-button"
                  disabled={false}
                  element="button"
                  fullWidth={true}
                  isDisabled={false}
                  onClick={[Function]}
                  size="s"
                  type="button"
                >
                  <button
                    className="euiButton euiButton--primary euiButton--small euiButton--fullWidth"
                    data-test-subj="add-series-position-button"
                    disabled={false}
                    onClick={[Function]}
                    style={
                      Object {
                        "minWidth": undefined,
                      }
                    }
                    type="button"
                  >
                    <EuiButtonContent
                      className="euiButton__content"
                      iconSide="left"
                      textProps={
                        Object {
                          "className": "euiButton__text",
                        }
                      }
                    >
                      <span
                        className="euiButtonContent euiButton__content"
                      >
                        <span
                          className="euiButton__text"
                        >
                          + Add label position
                        </span>
                      </span>
                    </EuiButtonContent>
                  </button>
                </EuiButtonDisplay>
              </EuiButton>
              <EuiSpacer
                size="s"
              >
                <div
                  className="euiSpacer euiSpacer--s"
                />
              </EuiSpacer>
            </div>
          </div>
        </EuiResizeObserver>
      </div>
    </div>
  </EuiAccordion>
</ConfigYAxisSide>
`;
